name: Test

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "**"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: 'pip'
          check-latest: true
          python-version: 3.12
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install tox tox-gh-actions
      - name: Test with tox
        shell: bash
        run: tox
      - name: Checkout frc-ixbrl-viewer
        uses: actions/checkout@v4
        with:
          repository: Arelle/frc-ixbrl-viewer
          path: processor/plugins/frc-ixbrl-viewer
          token: ${{ secrets.FRC_IXBRL_VIEWER_CHECKOUT_PAT }}
      - name: "Secrets"
        shell: bash
        run: |
          echo "COMPANIES_HOUSE_REST_API_KEY=${{ secrets.COMPANIES_HOUSE_REST_API_KEY }}" >> ./frc-codex-server.secrets
          echo "COMPANIES_HOUSE_STREAM_API_KEY=${{ secrets.COMPANIES_HOUSE_STREAM_API_KEY }}" >> ./frc-codex-server.secrets
      - name: "Compose"
        timeout-minutes: 5
        shell: bash
        run: |
          ./dev/env-setup.sh
      - name: "Test"
        # dependabot can not access secrets, which is required for these tests to pass
        # Quick workaround is to not run the tests, but we could implement solutions described here:
        # https://github.com/dependabot/dependabot-core/issues/3253#issuecomment-797125425
        if: ${{ github.actor != 'dependabot[bot]' }}
        shell: bash
        run: |
          echo "Testing help form submission..."
          curl i --fail -X POST http://localhost:8080/help \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "name=testname&emailAddress=test@email.com&message=testmessage&referer=http://localhost:8080/"
          echo "Testing survey form submission..."
          curl i --fail -X POST http://localhost:8080/survey \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "searchUtilityRating=5&searchSpeedRating=4&viewerSpeedRating=3"
          
          echo "Wait for smoke testing to be ready..."
          curl -i --fail --silent http://localhost:8080/admin/smoketest/wait
          echo "Test invocation"
          curl -i --fail --silent -L http://localhost:8080/admin/smoketest/invoke
          echo "Test homepage"
          curl -i --fail http://localhost:8080/
          echo "Test CH API client"
          curl -i --fail http://localhost:8080/admin/smoketest/companieshouse/company/00324341
          echo "Test CH archive client"
          curl -i --fail http://localhost:8080/admin/smoketest/companieshouse/history
          echo "Test FCA API"
          curl -i --fail http://localhost:8080/admin/smoketest/fca
          echo "Test indexer page"
          curl -i --fail http://localhost:8080/admin/smoketest/indexer
          echo "Test queue page"
          curl -i --fail http://localhost:8080/admin/smoketest/queue
          echo "Test database page"
          curl -i --fail http://localhost:8080/admin/smoketest/database
          echo "Test support action: list_errors"
          curl -i --fail 'localhost:8082/2015-03-31/functions/function/invocations' \
            --data '{"action":"list_errors"}'
          echo "Test support action: reset_filings"
          curl -i --fail 'localhost:8082/2015-03-31/functions/function/invocations' \
            --data '{"action":"reset_filings","company_number":"1234567890"}'

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker-logs
          if-no-files-found: error
          path: ./dev/logs

  puppeteer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: 'pip'
          check-latest: true
          python-version: 3.12
      - name: Install dependencies
        shell: bash
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Checkout frc-ixbrl-viewer
        uses: actions/checkout@v4
        with:
          repository: Arelle/frc-ixbrl-viewer
          path: processor/plugins/frc-ixbrl-viewer
          token: ${{ secrets.FRC_IXBRL_VIEWER_CHECKOUT_PAT }}
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          check-latest: true
          node-version: 22
      - name: Install dependencies
        shell: bash
        run: npm ci
      - name: "Create Dummy Secrets File"
        shell: bash
        run: touch ./frc-codex-server.secrets # Seeded DB does not require secrets
      - name: "Compose"
        timeout-minutes: 5
        shell: bash
        run: SEEDED=true ./dev/env-setup.sh
      - name: "Test"
        shell: bash
        run: npm run test
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: puppeteer-artifacts
          if-no-files-found: error
          path: |
            ./puppeteer/artifacts
            ./dev/logs
